<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Aceptar" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="Ajustes" xml:space="preserve">
    <value>Ajustes</value>
  </data>
  <data name="Apellido" xml:space="preserve">
    <value>Apellido</value>
  </data>
  <data name="AsociarCliente" xml:space="preserve">
    <value>Asociar Cliente</value>
  </data>
  <data name="Ayuda" xml:space="preserve">
    <value>Ayuda</value>
  </data>
  <data name="AñadirCarrito" xml:space="preserve">
    <value>Añadir al Carrito</value>
  </data>
  <data name="Bienvenido" xml:space="preserve">
    <value>Bienvenido!</value>
  </data>
  <data name="BlockingUser" xml:space="preserve">
    <value>Se bloqueo al usuario por demasiados intentos</value>
  </data>
  <data name="Buscar" xml:space="preserve">
    <value>Buscar</value>
  </data>
  <data name="Cambiar" xml:space="preserve">
    <value>Cambiar</value>
  </data>
  <data name="CambiarContraseña" xml:space="preserve">
    <value>Cambiar Contraseña</value>
  </data>
  <data name="CambiarIdioma" xml:space="preserve">
    <value>Cambiar Idioma</value>
  </data>
  <data name="Cantidad" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="CargaConExito" xml:space="preserve">
    <value>Carga con exito</value>
  </data>
  <data name="Cargar" xml:space="preserve">
    <value>Cargar</value>
  </data>
  <data name="CarritoCreado" xml:space="preserve">
    <value>Carrito creado con ID:</value>
  </data>
  <data name="CarritoError" xml:space="preserve">
    <value>Error al crear el carrito:</value>
  </data>
  <data name="CarritoId" xml:space="preserve">
    <value>Carrito Id</value>
  </data>
  <data name="CarritoNotFound" xml:space="preserve">
    <value>Carrito no encontrado</value>
  </data>
  <data name="CarritoVacioException" xml:space="preserve">
    <value>Debe cargar el carrito primero</value>
  </data>
  <data name="Cerrar" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="CerrarSesion" xml:space="preserve">
    <value>Cerrar Sesion</value>
  </data>
  <data name="ClavesDistintasException" xml:space="preserve">
    <value>Las claves son distintas</value>
  </data>
  <data name="Cliente" xml:space="preserve">
    <value>Cliente:</value>
  </data>
  <data name="ClienteAsociadoException" xml:space="preserve">
    <value>Debe asociar un cliente al carrito</value>
  </data>
  <data name="ClienteAsociadoOK" xml:space="preserve">
    <value>Cliente asociado con exito</value>
  </data>
  <data name="Clientes" xml:space="preserve">
    <value>Clientes</value>
  </data>
  <data name="Contraseña" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="CredencialesInvalidas" xml:space="preserve">
    <value>Credenciales invalidas</value>
  </data>
  <data name="CVV" xml:space="preserve">
    <value>CVV</value>
  </data>
  <data name="DatosEfectivo" xml:space="preserve">
    <value>Datos Efectivo</value>
  </data>
  <data name="DatosTarjeta" xml:space="preserve">
    <value>Datos de Tarjeta</value>
  </data>
  <data name="DesbloqueadoConExito" xml:space="preserve">
    <value>Desbloqueado con exito</value>
  </data>
  <data name="Desbloquear" xml:space="preserve">
    <value>Desbloquear</value>
  </data>
  <data name="Dni" xml:space="preserve">
    <value>Dni</value>
  </data>
  <data name="Efectivo" xml:space="preserve">
    <value>Efectivo</value>
  </data>
  <data name="EliminadoConExito" xml:space="preserve">
    <value>Eliminado con exito</value>
  </data>
  <data name="Eliminar" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="EliminarProducto" xml:space="preserve">
    <value>Eliminar Producto</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FaltanCamposException" xml:space="preserve">
    <value>Faltan completar campos</value>
  </data>
  <data name="FechaExp" xml:space="preserve">
    <value>Fecha de Expiracion</value>
  </data>
  <data name="FechaExpException" xml:space="preserve">
    <value>La fecha de expiración no puede ser anterior al mes y año actuales.</value>
  </data>
  <data name="FormNotClosable" xml:space="preserve">
    <value>No puede cerrar el formulario durante esta operacion</value>
  </data>
  <data name="GenerarCarrito" xml:space="preserve">
    <value>Generar Carrito</value>
  </data>
  <data name="GenerarVenta" xml:space="preserve">
    <value>Generar Venta</value>
  </data>
  <data name="GestionarUsuarios" xml:space="preserve">
    <value>Gestionar Usuarios</value>
  </data>
  <data name="Ingresar" xml:space="preserve">
    <value>Ingresar</value>
  </data>
  <data name="InsuficienteStockException" xml:space="preserve">
    <value>No hay suficiente stock para el producto:</value>
  </data>
  <data name="IrCarrito" xml:space="preserve">
    <value>Ir al carrito</value>
  </data>
  <data name="MainMessage" xml:space="preserve">
    <value>Comienza navegando por las opciones del menú para acceder a las funcionalidades que necesites, como registrar pedidos, gestionar inventario o generar informes. Si tienes alguna pregunta o necesitas ayuda, no dudes en contactar con el equipo de soporte.</value>
  </data>
  <data name="ModificadoConExito" xml:space="preserve">
    <value>Modificado con exito.</value>
  </data>
  <data name="Modificar" xml:space="preserve">
    <value>Modificar</value>
  </data>
  <data name="Monto" xml:space="preserve">
    <value>Monto:</value>
  </data>
  <data name="MontoCliente" xml:space="preserve">
    <value>Monto del cliente</value>
  </data>
  <data name="MontoClienteMissing" xml:space="preserve">
    <value>Por favor, complete el monto del cliente.</value>
  </data>
  <data name="MontoInsuficiente" xml:space="preserve">
    <value>El monto no es suficiente</value>
  </data>
  <data name="Nombre" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="NotFoundClient" xml:space="preserve">
    <value>No existe el cliente con el id:</value>
  </data>
  <data name="NumeroTarjeta" xml:space="preserve">
    <value>Numero de Tarjeta</value>
  </data>
  <data name="OnlyNumbers" xml:space="preserve">
    <value>Solo se admiten numeros</value>
  </data>
  <data name="PreguntaCerrarSesion" xml:space="preserve">
    <value>Esta seguro que desea cerrar la sesion?</value>
  </data>
  <data name="ProductoEliminado" xml:space="preserve">
    <value>Producto eliminado del carrito correctamente.</value>
  </data>
  <data name="Productos" xml:space="preserve">
    <value>Productos</value>
  </data>
  <data name="RegexFechaExpException" xml:space="preserve">
    <value>Fecha de expiración inválida. Use el formato MM/AA.</value>
  </data>
  <data name="RegistrarCliente" xml:space="preserve">
    <value>Registrar Cliente</value>
  </data>
  <data name="RepitaContraseña" xml:space="preserve">
    <value>Repita Contraseña</value>
  </data>
  <data name="Resumen" xml:space="preserve">
    <value>Resumen</value>
  </data>
  <data name="Salir" xml:space="preserve">
    <value>Salir</value>
  </data>
  <data name="SeleccionarCarritoException" xml:space="preserve">
    <value>Debe seleccionar un carrito</value>
  </data>
  <data name="SeleccionarProducto" xml:space="preserve">
    <value>Seleccionar Producto</value>
  </data>
  <data name="SeleccionFilaEliminar" xml:space="preserve">
    <value>Por favor, seleccione una fila para eliminar.</value>
  </data>
  <data name="SelectAProductException" xml:space="preserve">
    <value>Debe seleccionar un producto primero</value>
  </data>
  <data name="SqlException" xml:space="preserve">
    <value>Error al escribir en la base de datos:</value>
  </data>
  <data name="StockException" xml:space="preserve">
    <value>No hay stock suficiente</value>
  </data>
  <data name="Tarjeta" xml:space="preserve">
    <value>Tarjeta</value>
  </data>
  <data name="TipoPago" xml:space="preserve">
    <value>Tipo de Pago</value>
  </data>
  <data name="Titular" xml:space="preserve">
    <value>Titular</value>
  </data>
  <data name="TotalPagar" xml:space="preserve">
    <value>Total a Pagar:</value>
  </data>
  <data name="Transferencia" xml:space="preserve">
    <value>Transferencia</value>
  </data>
  <data name="UserIsBlocked" xml:space="preserve">
    <value>El usuario esta bloqueado</value>
  </data>
  <data name="UserIsNotActive" xml:space="preserve">
    <value>El usuario no esta activo</value>
  </data>
  <data name="UsuarioAlreadyUnlocked" xml:space="preserve">
    <value>El usuario ya se encuentra desbloqueado</value>
  </data>
  <data name="UsuarioExisteException" xml:space="preserve">
    <value>El Usuario ya existe</value>
  </data>
  <data name="VentaCerrada" xml:space="preserve">
    <value>Venta Cerrada</value>
  </data>
  <data name="VentaCerradaPlusVuelto" xml:space="preserve">
    <value>Venta cerrada, el vuelto es de:</value>
  </data>
  <data name="Ventas" xml:space="preserve">
    <value>Ventas</value>
  </data>
</root>